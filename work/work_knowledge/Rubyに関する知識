クラス変数は「@@」から始まる変数のことを指します。
クラス変数は継承されたクラスにも反映されるので、@@nameを参照できる。

ライブラリとフレームワークの違い
  フレームワーク→骨組み、プログラムを作る時の元となるもの
  ライブラリ→後から付け足す機能

配列
  配列が保持しているのはオブジェクトの参照であり、オブジェクトそのものではない。
  なのでオブジェクトを更新すると、そのオブジェクトを参照している全ての配列要素も変化して見える。
  hoge = "abc"
  geso = [hoge, hoge]
  hoge[2] = 'z'
  p geso #=> ["azc","azc"]

  初期化
  arr = Array.new()
  arr = Array.new # 等価
  arr = [] # 等価

インスタンス変数とかアクセスメソッドとか
http://www.rubylife.jp/ini/class/index6.html
http://www.rubylife.jp/ini/class/index4.html

yield
http://rubist.blog77.fc2.com/blog-entry-97.html


ダブルクォーテーションの方が高機能な処理を行っているため、シングルクォーテーションの方が処理が速い。
変数の置換を行う必要が無い場合はシングルクォーテーションを使うようにした方がよさそう。

・ダブルクォーテーション　 ･･･ 文字列中の変数を変数値に置換する
・シングルクォーテーション ･･･ 文字列中の変数を変数値に置換しない

injectへの理解
  ary.inject(init) { |result, item| ...}
  これは以下のコードと同じである

  result = init
  ary.each do |item|
    result = ...
  end

  和を求めるときは「result + item」を、
  最大値を求めるときは「(item > result) ? item : result」を 
  「...」の部分に書けばいいということ
  例：[1, 2, 3, 4, 5].inject(0) { |sum, i| sum + i }   # => 15
      sum = [1, 2, 3, 4, 5].inject(:+)      # => 15
      どっちも原理は同じ



true/falseのことをブール値という

繰り返しで一時的に使う変数i→j→kの順番

単純な繰り返しにはfor 条件が複雑になってきたらwhile
（どっちも変わらない）

文字をエスケープしたい
  raw(文字列)

知って得する！５５のRubyのトリビアな記法
http://melborne.github.io/2013/03/04/ruby-trivias-you-should-know-4/