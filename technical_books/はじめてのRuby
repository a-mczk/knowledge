２章配列とハッシュ
モジュール
  共通のクラスを継承することなしに実装を共有するための仕組み

７章メソッド
  a.metod(1, "str")
  a::metod(1, "str")
  a = レシーバ
  metod = メソッド名
  (1, "str") = 引数
  上記のどちらでもメソッドを呼び出すことができる。
  レシーバが省略されている時はデフォルトのレシーバselfに対して呼ぶ

  引数を持たないメソッドのレシーバを省略するとローカル変数と見分けがつかなくなる場合がある。
  その場合はローカル変数が優先される。
  場合によってはselfでメソッドを明示してあげる。

  hoge = 1 #ローカル変数
  hoge #ローカル変数参照
  self.hoge #メソッド呼び出し

  組み込み関数
    putsやpがその代表例
    すべてのクラスはObjectクラスを通じてKernelモジュールをincludeしているから、任意のオブジェクトをレシーバとして
    これらのメソッドを呼び出せる。

    引数展開
      ※修飾により配列に格納された値を引数に展開できる
        array = [3,4,5]
        hoge(1,2,*array) #1,2,3,4,5で渡すのと同じ
        hoge(1,2,*array,6) #1,2,3,4,5,6で渡すのと同じ

        ※配列から引数への自動的な展開はできない
          def hoge(a,b)
            p [a,b]
          end
          kore = [1,2]
          x, y = kore #xが1,yが2
          hoge(kore) #引数が１つしかきてないエラーになる

    def式
      def prod(x,y) x*y end #1行にまとめるスタイル
      def prod x,y; x*y end #括弧を省略して１行にまとめるスタイル

      